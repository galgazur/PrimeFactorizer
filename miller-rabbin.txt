private boolean millerRabin(BigInteger N) {
		Random rnd = new Random();
		for (int i = 0; i < CERTAINTY; i++) {
			BigInteger a;
			BigInteger N_1 = N.subtract(BigInteger.ONE);
			do {
				a = new BigInteger(N.bitLength(), rnd);
			} while (a.equals(BigInteger.ZERO) || a.equals(BigInteger.ONE) || a.compareTo(N_1) >= 0);

			boolean pass = false;
			BigInteger d = N_1;
			int s = d.getLowestSetBit();
			d = d.shiftRight(s);
			BigInteger x = a.modPow(d, N);
			if (x.equals(BigInteger.ONE)) {
				pass = true;
			}
			for (int j = 0; j < s - 1; j++) {
				if (x.equals(N_1)) {
					pass = true;
				}
				x = x.multiply(x).mod(N);
			}
			if (x.equals(N_1)) {
				pass = true;
			}
			if (!pass) {
				return false;
			}
		}
		return true;
	}